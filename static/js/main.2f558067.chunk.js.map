{"version":3,"sources":["constants/applicationConstants.js","logo.svg","components/playerView/sample_video.mp4","l11.jpg","utils/liveStreamUtil.js","components/playerView/playerView.js","components/shovelerView/shovelerView.js","App.js","serviceWorker.js","index.js"],"names":["process","__webpack_require__","d","__webpack_exports__","liveStreamMockUrl","browser","module","exports","p","addLiveStreamSupport","videoElement","Hls","isSupported","hls","loadSource","attachMedia","on","Events","MANIFEST_PARSED","play","loadHLSForSupportingBrowser","canPlayType","src","addEventListener","loadHLSForUnsupportingBrowser","remoteActions","React","Component","ShovelerView","require","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","scrollToRight","leftPos","$","concat","Key","scrollLeft","animate","scrollToLeft","console","log","scrollToDown","topPos","scrollTop","scrollToUp","handleButtonFocus","e","item","handleOnKeyUp","keyCode","state","playVideo","scrollRight","value","w","window","document","documentElement","g","getElementsByTagName","x","innerWidth","clientWidth","innerHeight","clientHeight","_this2","_this$props","rowNumber","colNumber","items","live","react_default","a","createElement","className","style","display","flexDirection","maxWidth","overflowX","map","onFocus","onKeyUp","onClick","setState","alt","App","el","handleOnKeyInput","target","shovelerView_shovelerView","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f558067.chunk.js","sourcesContent":["export const liveStreamMockUrl =\n  \"https://video-dev.github.io/streams/x36xhzz/x36xhzz.m3u8\";\n\nexport const isClient = !!process.browser;\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/sample_video.f13004ee.mp4\";","module.exports = __webpack_public_path__ + \"static/media/l11.6c13ecdd.jpg\";","import Hls from \"hls.js\";\nimport { liveStreamMockUrl } from \"../constants/applicationConstants\";\n\nconst loadHLSForSupportingBrowser = videoElement => {\n  let hls = new Hls();\n  hls.loadSource(liveStreamMockUrl);\n  hls.attachMedia(videoElement);\n  hls.on(Hls.Events.MANIFEST_PARSED, () => {\n    videoElement.play();\n  });\n};\n\nconst loadHLSForUnsupportingBrowser = videoElement => {\n  videoElement.src = liveStreamMockUrl;\n  videoElement.addEventListener(\"loadedmetadata\", () => {\n    videoElement.play();\n  });\n};\n\nexport const addLiveStreamSupport = videoElement => {\n  if (Hls.isSupported()) {\n    loadHLSForSupportingBrowser(videoElement);\n  } else if (videoElement.canPlayType(\"application/vnd.apple.mpegurl\")) {\n    loadHLSForUnsupportingBrowser(videoElement);\n  }\n};\n\nexport const removeLoadMetadataEventListner = videoElement => {\n  videoElement.addEventListener(\"loadedmetadata\", function() {\n    videoElement.play();\n  });\n};\n","import React from \"react\";\nimport {\n  addLiveStreamSupport,\n  removeLoadMetadataEventListner\n} from \"../../utils/liveStreamUtil\";\n// const videoUrl = require(\"./sample_video.mp4\");\nimport \"./playerView.scss\";\n\nconst remoteActions = {\n  UP: 38,\n  DOWN: 40,\n  LEFT: 37,\n  RIGHT: 39,\n  SELECT: 13,\n  BACK: 8,\n  REWIND: 227,\n  PLAY_PAUSE: 179,\n  FAST_FORWARD: 228\n};\n\nclass PlayerView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.seekBarRef = React.createRef();\n    this.playPauseVideo = this.playPauseVideo.bind(this);\n  }\n  componentDidMount() {\n    debugger;\n    const that = this;\n    window.addEventListener(\"keyup\", e => {\n      console.log(e);\n      if (e.keyCode === remoteActions.SELECT) {\n        that.playPauseVideo();\n      } else if (e.keyCode === remoteActions.REWIND) {\n        that.decreaseSeekBarByTenSeconds();\n      } else if (e.keyCode === remoteActions.FAST_FORWARD) {\n        that.increaseSeekBarByTenSeconds();\n      } else if (e.keyCode === remoteActions.LEFT) {\n        that.decreaseSeekBarByTenSeconds();\n      } else if (e.keyCode === remoteActions.RIGHT) {\n        that.increaseSeekBarByTenSeconds();\n      } else if (e.keyCode === remoteActions.PLAY_PAUSE) {\n        that.playPauseVideo();\n      }\n    });\n    if (this.props.live) {\n      const video = document.getElementById(\"liveVideo\");\n      addLiveStreamSupport(video);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.live) {\n      const video = document.getElementById(\"liveVideo\");\n      removeLoadMetadataEventListner(video);\n    }\n  }\n\n  playPauseVideo = () => {\n    // const videoRef = document.getElementById(\"custom_video\");\n    console.log(this, this.videoRef.current);\n    if (this.videoRef.current.paused) {\n      this.videoRef.current.play();\n      this.videoRef.current.innerHTML = \"Pause\";\n    } else {\n      this.videoRef.current.pause();\n      this.videoRef.current.innerHTML = \"Play\";\n    }\n    // if (videoRef.paused) {\n    //   videoRef.play();\n    //   videoRef.innerHTML = \"Pause\";\n    // } else {\n    //   videoRef.pause();\n    //   videoRef.innerHTML = \"Play\";\n    // }\n  };\n\n  increaseSeekBarByTenSeconds = () => {\n    const videoRef = this.videoRef.current;\n    const seekBarRef = this.seekBarRef.current;\n    debugger;\n    const time = videoRef.duration * (seekBarRef.value / 100);\n    videoRef.currentTime = time + 10;\n  };\n\n  decreaseSeekBarByTenSeconds = () => {\n    const videoRef = this.videoRef.current;\n    const seekBarRef = this.seekBarRef.current;\n    debugger;\n    const time = videoRef.duration * (seekBarRef.value / 100);\n    videoRef.currentTime = time - 10;\n  };\n\n  handleSeekbarChange = seekBar => {\n    debugger;\n    console.log(seekBar);\n    const videoRef = this.videoRef.current;\n    debugger;\n    const time = videoRef.duration * (seekBar.target.value / 100);\n    videoRef.currentTime = time;\n  };\n\n  handleVideoTimeUpdate = () => {\n    const videoRef = this.videoRef.current;\n    const seekBarRef = this.seekBarRef.current;\n    const value = (100 / videoRef.duration) * videoRef.currentTime;\n    seekBarRef.value = value;\n  };\n\n  handleMouseDown = () => {\n    const videoRef = this.videoRef.current;\n    videoRef.pause();\n  };\n\n  handleMouseUp = () => {\n    const videoRef = this.videoRef.current;\n    videoRef.play();\n  };\n\n  render() {\n    console.log(this.props);\n    if (this.seekBarRef.current) {\n      console.log(this.seekBarRef.current.value);\n    }\n    return (\n      <>\n        {!this.props.live ? (\n          <video\n            onKeyUp={e => {\n              console.log(e);\n            }}\n            onTimeUpdate={this.handleVideoTimeUpdate}\n            id=\"custom_video\"\n            //   controls=\"controls\"\n            style={{\n              position: \"absolute\",\n              top: \"0\",\n              left: \"0\",\n              width: \"100%\"\n            }}\n            ref={this.videoRef}\n            src={require(\"./sample_video.mp4\")}\n            //   autoPlay\n          >\n            {/* <source src=\"./sample_video.mp4\" type=\"video/mp4\" /> */}\n          </video>\n        ) : (\n          <video\n            onKeyUp={e => {\n              console.log(e);\n            }}\n            onTimeUpdate={this.handleVideoTimeUpdate}\n            style={{\n              position: \"absolute\",\n              top: \"0\",\n              left: \"0\",\n              width: \"100%\"\n            }}\n            ref={this.videoRef}\n            id=\"liveVideo\"\n          />\n        )}\n        <div id=\"vide_controls_bar\" className=\"video_controls\">\n          <button\n            style={{ width: \"10vw\", color: \"white\" }}\n            id=\"playpausebtn\"\n            onClick={this.playPauseVideo}\n          >\n            Pause\n          </button>\n          <button style={{ width: \"90vw\", padding: \"1rem\" }}>\n            <input\n              style={{ width: \"100%\" }}\n              ref={this.seekBarRef}\n              onChange={this.handleSeekbarChange}\n              onMouseDown={this.handleMouseDown}\n              onMouseUp={this.handleMouseUp}\n              type=\"range\"\n              id=\"seek-bar\"\n              value=\"0\"\n            />\n          </button>\n        </div>\n      </>\n    );\n  }\n}\nexport default PlayerView;\n","import React from \"react\";\n\nimport { liveStreamMockUrl } from \"../../constants/applicationConstants\";\nimport PlayerView from \"../playerView/playerView\";\nimport \"./shovelerView.scss\";\nimport $ from \"jquery\";\n\nconst videoImg = require(\"../../l11.jpg\");\n\nclass ShovelerView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playVideo: false,\n      scrollRight: false\n    };\n  }\n\n  componentDidMount() {\n    // window.addEventListener(\"keyup\", e => {\n    //   if (e.keyCode === 37) {\n    //     var leftPos = $(\".video_container_scroll\").scrollLeft();\n    //     $(\".video_container_scroll\").animate(\n    //       {\n    //         scrollLeft: leftPos - 1000\n    //       },\n    //       800\n    //     );\n    //   } else if (e.keyCode === 39) {\n    //     var leftPos = $(\".video_container_scroll\").scrollLeft();\n    //     $(\".video_container_scroll\").animate(\n    //       {\n    //         scrollLeft: leftPos + 1000\n    //       },\n    //       800\n    //     );\n    //   }\n    // });\n  }\n\n  vwToPx(value) {\n    const w = window,\n      d = document,\n      e = d.documentElement,\n      g = d.getElementsByTagName(\"body\")[0],\n      x = w.innerWidth || e.clientWidth || g.clientWidth,\n      y = w.innerHeight || e.clientHeight || g.clientHeight;\n    return (x * value) / 100;\n  }\n\n  scrollToRight = () => {\n    const leftPos = $(`div[Key=\"${this.props.Key}\"]`).scrollLeft();\n    $(`div[Key=\"${this.props.Key}\"]`).animate(\n      {\n        scrollLeft: leftPos + 380\n      },\n      800\n    );\n  };\n\n  scrollToLeft = () => {\n    const leftPos = $(`div[Key=\"${this.props.Key}\"]`).scrollLeft();\n    console.log(leftPos);\n    $(`div[Key=\"${this.props.Key}\"]`).animate(\n      {\n        scrollLeft: leftPos - 380\n      },\n      800\n    );\n  };\n\n  scrollToDown = () => {\n    const topPos = $(`div[Key=\"${this.props.Key}\"]`).scrollTop();\n    console.log(topPos, $(`div[Key=\"${this.props.Key}\"]`));\n    $(`div[Key=\"${this.props.Key}\"]`).animate(\n      {\n        scrollTop: topPos + 700\n      },\n      800\n    );\n  };\n\n  scrollToUp = () => {\n    const topPos = $(`div[Key=\"${this.props.Key}\"]`).scrollTop();\n    console.log(topPos, $(`div[Key=\"${this.props.Key}\"]`));\n    $(`div[Key=\"${this.props.Key}\"]`).animate(\n      {\n        scrollTop: topPos - 700\n      },\n      800\n    );\n  };\n\n  handleButtonFocus = (e, item) => {\n    // if (item === 1) return;\n    // const { parentElement } = e.currentTarget;\n    // // e.currentTarget.parentElement.scrollLeft += 1010;\n    // var leftPos = $(`div[Key=\"${this.props.Key}\"]`).scrollLeft();\n    // $(`div[Key=\"${this.props.Key}\"]`).animate(\n    //   {\n    //     scrollLeft: leftPos + 1000\n    //   },\n    //   800\n    // );\n  };\n\n  handleOnKeyUp = (e, item) => {\n    // if (item === 1) return;\n    // debugger;\n\n    if (e.keyCode === 39) {\n      //   e.currentTarget.parentElement.scrollLeft += 380;\n      this.scrollToRight();\n      //   this.setState({\n      //     scrollRight: true\n      //   });\n    } else if (e.keyCode === 37) {\n      //   e.currentTarget.parentElement.scrollLeft -= 380;\n\n      this.scrollToLeft();\n      //   this.setState({\n      //     scrollRight: false\n      //   });\n    } else if (e.keyCode === 38) {\n      //   e.currentTarget.parentElement.scrollLeft -= 380;\n\n      this.scrollToUp();\n      //   this.setState({\n      //     scrollRight: false\n      //   });\n    } else if (e.keyCode === 40) {\n      //   e.currentTarget.parentElement.scrollLeft -= 380;\n\n      this.scrollToDown();\n      //   this.setState({\n      //     scrollRight: false\n      //   });\n    }\n  };\n\n  render() {\n    const { rowNumber, colNumber, play, items, live } = this.props;\n    const { playVideo } = this.state;\n    console.log(rowNumber, colNumber, this.props.live);\n\n    return (\n      <div\n        className=\"video_container_scroll\"\n        Key={this.props.Key}\n        style={{\n          display: \"inline-flex\",\n          flexDirection: \"row\",\n          maxWidth: \"100vw\",\n          //   height: \"30vh\",\n          overflowX: \"scroll\"\n        }}\n      >\n        {items.map(item => (\n          <button\n            className=\"button-image\"\n            onFocus={e => this.handleButtonFocus(e, item)}\n            onKeyUp={e => this.handleOnKeyUp(e, item)}\n            onClick={e => {\n              this.setState({ playVideo: true, src: liveStreamMockUrl });\n            }}\n          >\n            <img\n              className=\"image-class\"\n              //   style={{ width: \" 100%\" }}\n              //   src={videoImg}\n              src=\"https://res.cloudinary.com/www-curefit-com/image/upload/w_200,f_auto,ar_0.78,c_fit,q_auto:eco/dpr_2/image/diy/c515c0f3-e04f-47ee-8347-3165138e9aec.jpg\"\n              alt=\"logo\"\n            />\n          </button>\n\n          //   <div\n          //     style={{\n          //       width:\n          //         rowNumber === 1 && colNumber === item - 1 ? \"45vw\" : \"35vw\",\n          //       padding: \"2rem\",\n          //       display: \"inline-block\"\n          //     }}\n          //   >\n          //     <img\n          //       style={{ boxShadow: \"0 0 10px black\" }}\n          //       src={videoImg}\n          //       alt=\"logo\"\n          //     />\n          //     {rowNumber === 1 && colNumber === item - 1 && play && (\n          //       <PlayerView src={liveStreamMockUrl} />\n          //     )}\n          //   </div>\n        ))}\n        {/* {playVideo && <PlayerView live={live} src={liveStreamMockUrl} />} */}\n      </div>\n    );\n    //   <div\n    //     style={{\n    //       width: rowNumber === 1 && colNumber === 0 ? \"45vw\" : \"35vw\",\n    //       padding: \"2rem\"\n    //     }}\n    //   >\n    //     <img\n    //       style={{ width: \"100%\", boxShadow: \"0 0 10px black\" }}\n    //       src={videoImg}\n    //       alt=\"logo\"\n    //     />\n    //     {rowNumber === 1 && colNumber === 0 && play && (\n    //       <PlayerView src={liveStreamMockUrl} />\n    //     )}\n    //   </div>\n  }\n}\n\nexport default ShovelerView;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport \"./firetv.scss\";\n// import Hls from \"hls.js\";\nimport {\n  addLiveStreamSupport,\n  removeLoadMetadataEventListner\n} from \"./utils/liveStreamUtil\";\nimport ShovlerView from \"./components/shovelerView/shovelerView\";\nimport $ from \"jquery\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rowNumber: 0,\n      colNumber: 0,\n      play: false\n    };\n  }\n  componentDidMount() {\n    const that = this;\n    // window.addEventListener(\"keyup\", e => {\n    //   console.log(e);\n    //   if (e.keyCode === 40) {\n    //     if (e.target)\n    //       that.setState(p => ({\n    //         rowNumber: p.rowNumber + 1,\n    //         play: false\n    //       }));\n    //   } else if (e.keyCode === 38) {\n    //     that.setState(p => ({\n    //       rowNumber: p.rowNumber - 1,\n    //       play: false\n    //     }));\n    //   } else if (e.keyCode === 39) {\n    //     that.setState(p => ({\n    //       colNumber: p.colNumber + 1,\n    //       play: false\n    //     }));\n    //   } else if (e.keyCode === 37) {\n    //     that.setState(p => ({\n    //       colNumber: p.colNumber - 1,\n    //       play: false\n    //     }));\n    //   } else if (e.keyCode === 13) {\n    //     that.setState(p => ({\n    //       play: true\n    //     }));\n    //   }\n    // });\n    // const video = document.getElementById(\"video\");\n    // addLiveStreamSupport(video);\n  }\n\n  componentWillUnmount() {\n    // const video = document.getElementById(\"video\");\n    // removeLoadMetadataEventListner(video);\n  }\n\n  scrollToDown = () => {\n    const topPos = $(\".App\").scrollTop();\n    console.log(topPos);\n    $(\".App\").animate(\n      {\n        scrollTop: topPos + 700\n      },\n      800\n    );\n  };\n\n  scrollToUp = () => {\n    const topPos = $(\".App\").scrollTop();\n    const el = $(\".App\");\n    console.log(topPos, \"asdfasDF\", el);\n    $(\".App\").animate(\n      {\n        scrollTop: topPos - 700\n      },\n      800\n    );\n  };\n\n  handleOnKeyInput = e => {\n    if (e.target.className === \"button-image\") {\n      if (e.keyCode === 38) {\n        //   e.currentTarget.parentElement.scrollLeft -= 380;\n        this.scrollToUp();\n        //   this.setState({\n        //     scrollRight: false\n        //   });\n      } else if (e.keyCode === 40) {\n        //   e.currentTarget.parentElement.scrollLeft -= 380;\n        this.scrollToDown();\n        //   this.setState({\n        //     scrollRight: false\n        //   });\n      }\n    }\n  };\n  render() {\n    const items = [1, 2, 3, 4, 5, 6, 7];\n    console.log(this.state);\n    return (\n      <div className=\"App\" onKeyUp={this.handleOnKeyInput}>\n        <header style={{ display: \"flex\" }}>\n          <button className=\"buttonn\">\n            <div>Home</div>\n          </button>\n          <button className=\"buttonn\">\n            <div> At Center</div>\n          </button>\n        </header>\n        <div className=\"video-container\">\n          <span>Live Videos</span>\n          <ShovlerView\n            live={true}\n            Key=\"one\"\n            rowNumber={this.state.rowNumber}\n            colNumber={this.state.colNumber}\n            play={this.state.play}\n            items={[1, 2, 3, 4, 5]}\n          />\n        </div>\n        <div className=\"video-container\">\n          <span>Watch Now</span>\n          <ShovlerView\n            Key=\"two\"\n            rowNumber={this.state.rowNumber}\n            colNumber={this.state.colNumber}\n            play={this.state.play}\n            live={true}\n            items={[1, 2, 3, 4, 5]}\n          />\n        </div>\n        <div className=\"video-container\">\n          <span>Watch Now</span>\n          <ShovlerView\n            Key=\"three\"\n            live={false}\n            rowNumber={this.state.rowNumber}\n            colNumber={this.state.colNumber}\n            play={this.state.play}\n            items={[1, 2, 3, 4, 5, 6, 7]}\n          />\n        </div>{\" \"}\n        <div className=\"video-container\">\n          <span>Watch Now</span>\n          <ShovlerView\n            Key=\"four\"\n            live={true}\n            rowNumber={this.state.rowNumber}\n            colNumber={this.state.colNumber}\n            play={this.state.play}\n            items={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]}\n          />\n        </div>\n        {/* <div>\n          <input type=\"text\" />\n        </div>\n        <div>Live Videos</div> */}\n        {/* <div>\n          <video id=\"video\"> </video>\n        </div> */}\n        {/* <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            scrollSnapType: \"x mandatory\",\n            maxWidth: \"100vw\",\n            overflow: \"scroll\"\n          }}\n        >\n          {items.map(item => (\n            <section style={{ scrollSnapAlign: \"start\" }}>\n              <a>\n                <div\n                  className=\"video-items\"\n                  style={{\n                    margin: \"1rem\",\n                    padding: \"1rem\",\n                    background: \"darkslategray\",\n                    border: \"5px solid gray\",\n                    width: \"25vw\",\n                    height: \"auto\"\n                  }}\n                  tabIndex={item}\n                  autoFocus\n                >\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </div>\n              </a>\n            </section>\n          ))} */}\n        {/* <div id=\"one-D-view-item-elements\" class=\"one-D-details-container\">\n            <div id=\"one-d-no-items\" class=\"one-d-no-items-container\">\n              No content found.\n            </div>\n            <div id=\"one-D-shoveler-container\">\n              <div class=\"shoveler-rowitem-static\">fsagsfg</div>\n              <div class=\"shoveler-rowitem-static\">fsagsfg</div>\n              <div class=\"shoveler-rowitem-static\">fsagsfg</div>\n              <div class=\"shoveler-rowitem-static\">fsagsfg</div>\n            </div>\n            <div\n              id=\"one-D-summary-container\"\n              class=\"one-D-details-summary-text\"\n            >\n              <div id=\"summaryTitle\" class=\"one-D-summary-title\" />\n              <div id=\"summaryDate\" class=\"one-D-summary-pubdate\" />\n              <div id=\"summary-buttons-container\" />\n              <div id=\"summaryDesc\" class=\"one-D-summary-description\" />\n            </div>\n          </div> */}\n        {/* </div> */}\n        {/* <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            scrollSnapType: \"x mandatory\",\n            maxWidth: \"100vw\",\n            overflow: \"scroll\"\n          }}\n        >\n          {items.map(item => (\n            <section style={{ scrollSnapAlign: \"start\" }}>\n              <a>\n                <div\n                  className=\"video-items\"\n                  style={{\n                    margin: \"1rem\",\n                    padding: \"1rem\",\n                    background: \"darkslategray\",\n                    border: \"5px solid gray\",\n                    width: \"25vw\",\n                    height: \"auto\"\n                  }}\n                  tabIndex={item}\n                  autoFocus\n                >\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </div>\n              </a>\n            </section>\n          ))}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            scrollSnapType: \"x mandatory\",\n            maxWidth: \"100vw\",\n            overflow: \"scroll\"\n          }}\n        >\n          {items.map(item => (\n            <section style={{ scrollSnapAlign: \"start\" }}>\n              <a>\n                <div\n                  className=\"video-items\"\n                  style={{\n                    margin: \"1rem\",\n                    padding: \"1rem\",\n                    background: \"darkslategray\",\n                    border: \"5px solid gray\",\n                    width: \"25vw\",\n                    height: \"auto\"\n                  }}\n                  tabIndex={item}\n                  autoFocus\n                >\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </div>\n              </a>\n            </section>\n          ))}\n        </div> */}\n        {/* <div>\n          {items.map(item => (\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          ))}\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}